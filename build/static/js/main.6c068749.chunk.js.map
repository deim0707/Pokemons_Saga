{"version":3,"sources":["Pokemon/Redux/actionsPokemonList.ts","Pokemon/Redux/sagaPokemon.ts","api/pokemon-api.ts","RootRedux/saga.ts","Pokemon/Redux/initialStatePokemons.ts","Pokemon/Redux/reducerPokemonList.ts","RootRedux/reducer.ts","RootRedux/store.ts","Pokemon/usePokemon.hook.ts","Pokemon/Components/PokemonList/usePokemonList.hook.ts","Pokemon/Components/PokemonList/PokemonList.tsx","Pokemon/Components/PokemonActive/usePokemonActive.hook.ts","Pokemon/Components/PokemonActive/PokemonActive.tsx","Pokemon/Components/PokemonManePage/PokemonManePage.tsx","index.tsx"],"names":["ActionsPokemon","getPokemon","getPokemonList","pokemonSaga","api","_apiBase","sendRequest","url","a","fetch","res","json","limit","offset","id","action","call","pokemon","put","type","GET_POKEMON_SUCCESS","body","GET_POKEMON_ERROR","payload","message","pokemonList","GET_POKEMON_LIST_SUCCESS","GET_POKEMON_LIST_ERROR","takeEvery","GET_POKEMON","GET_POKEMON_LIST","startForkWatchers","fork","initialState","loading","error","activePokemon","value","reducerPokemon","state","results","CHANGE_ACTIVE_POKEMON","rootReducer","combineReducers","pokemons","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","store","createStore","applyMiddleware","run","usePokemon","dispatch","useDispatch","useSelector","pokemonState","pokemonMethods","get_pokemon","get_pokemon_list","change_active_pokemon","changeActivePokemon","getPokemonIdxFromLink","link","exec","usePokemonList","history","useHistory","useEffect","map","name","changeSelectedPokemon","push","PokemonList","pokemonListElement","List","component","aria-label","ListItem","button","selected","onClick","ListItemText","primary","className","usePokemonActive","useParams","PokemonActive","Card","variant","CardContent","Typography","color","gutterBottom","weight","height","PokemonManePage","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c068749.chunk.js","sourcesContent":["export enum ActionsPokemon {\r\n    GET_POKEMON = \"GET_POKEMON_BODY\",\r\n    GET_POKEMON_SUCCESS = \"GET_POKEMON_SUCCESS\",\r\n    GET_POKEMON_ERROR = \"GET_POKEMON_ERROR\",\r\n    GET_POKEMON_LIST = \"GET_POKEMON_LIST_BODY\",\r\n    GET_POKEMON_LIST_SUCCESS = \"GET_POKEMON_LIST_SUCCESS\",\r\n    GET_POKEMON_LIST_ERROR = \"GET_POKEMON_LIST_ERROR\",\r\n    CHANGE_ACTIVE_POKEMON = \"CHANGE_ACTIVE_POKEMON\",\r\n}\r\n\r\nexport interface IPokemonAction {\r\n    type: ActionsPokemon,\r\n    id?: number,\r\n    body?: any\r\n    limit?: number,\r\n    offset?: number\r\n}\r\n\r\nexport const getPokemon = (id: number): IPokemonAction => ({\r\n    type: ActionsPokemon.GET_POKEMON,\r\n    id\r\n})\r\n\r\nexport const getPokemonList = (limit: number, offset: number): IPokemonAction => ({\r\n    type: ActionsPokemon.GET_POKEMON_LIST,\r\n    limit, offset\r\n})\r\n\r\nexport const changeActivePokemon = (id: number): IPokemonAction => ({\r\n    type: ActionsPokemon.CHANGE_ACTIVE_POKEMON,\r\n    id\r\n})\r\n","import {call, put, takeEvery, takeLatest} from 'redux-saga/effects'\nimport {ActionsPokemon} from \"./actionsPokemonList\";\nimport PokemonApi from \"../../api/pokemon-api\";\n\nconst api = new PokemonApi();\n\nfunction* getPokemon(action: any) {\n    try {\n        const pokemon = yield call(api.getPokemon, action.id);\n        yield put({type: ActionsPokemon.GET_POKEMON_SUCCESS, body: pokemon});\n    } catch (e) {\n        yield put({type: ActionsPokemon.GET_POKEMON_ERROR, payload: e.message});\n    }\n}\n\nfunction* getPokemonList(action: any) {\n    try {\n        const pokemonList = yield call(api.getPokemonList, action.limit, action.offset);\n        yield put({type: ActionsPokemon.GET_POKEMON_LIST_SUCCESS, body: pokemonList});\n    } catch (e) {\n        yield put({type: ActionsPokemon.GET_POKEMON_LIST_ERROR, payload: e.message});\n    }\n}\n\n/*\n  Запускаем функцию Саги на каждое задиспатченное действие `ЭКШЕН`.\n  Позволяет одновременно получать данные.\n*/\nfunction* pokemonSaga() {\n    yield takeEvery(ActionsPokemon.GET_POKEMON, getPokemon);\n    yield takeEvery(ActionsPokemon.GET_POKEMON_LIST, getPokemonList);\n}\n\n/*\n  В качестве альтернативы вы можете использовать `takeLatest`.\n\n  Не допускает одновременное получение данных пользователей. Если `ЭКШЕН`\n  диспатчится в то время когда предыдущий запрос все еще находится в ожидании ответа,\n  то этот ожидающий ответа запрос отменяется и срабатывает только последний.\n*/\n// function* pokemonSaga() {\n//     yield takeLatest(ActionsPokemon.GET_POKEMON, fetchUser);\n// }\n\nexport default pokemonSaga;\n","export default class PokemonApi {\r\n    _apiBase = \"https://pokeapi.co/api/v2/\";\r\n\r\n    sendRequest = async (url: string) => {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n        try {\r\n            return await res.json();\r\n        } catch (err) {\r\n            return err\r\n        }\r\n    };\r\n\r\n    getPokemonList = async (limit: number, offset: number) => await this.sendRequest(`pokemon?limit=${limit}&offset=${offset}`);\r\n\r\n    getPokemon = async (id:number) => await this.sendRequest(`pokemon/${id}`);\r\n}\r\n","import { fork } from \"redux-saga/effects\";\r\nimport pokemonSaga from \"../Pokemon/Redux/sagaPokemon\";\r\n\r\nexport default function* startForkWatchers() {\r\n    yield fork(pokemonSaga);\r\n}\r\n","export interface IPokemonState {\r\n    loading: boolean,\r\n    error: boolean,\r\n    activePokemon: IActivePokemon,\r\n    pokemonList: any[] | null;\r\n}\r\n\r\nexport interface IActivePokemon {\r\n    id: number | null | undefined,\r\n    value: any | null | undefined,\r\n}\r\n\r\nexport const initialState: IPokemonState = {\r\n    loading: false,\r\n    error: false,\r\n    activePokemon: {\r\n        id: null,\r\n        value: null,\r\n    },\r\n    pokemonList: null,\r\n}\r\n\r\n\r\n\r\n","import {ActionsPokemon, IPokemonAction} from \"./actionsPokemonList\";\r\nimport {initialState, IPokemonState} from \"./initialStatePokemons\";\r\n\r\n\r\nconst reducerPokemon = (state = initialState, action: IPokemonAction): IPokemonState => {\r\n    switch (action.type) {\r\n        case ActionsPokemon.GET_POKEMON:\r\n        case ActionsPokemon.GET_POKEMON_LIST:\r\n            return {...state, loading: true};\r\n        case ActionsPokemon.GET_POKEMON_ERROR:\r\n        case ActionsPokemon.GET_POKEMON_LIST_ERROR:\r\n            return {...state, error: true, loading: false};\r\n        case ActionsPokemon.GET_POKEMON_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                activePokemon: {...state.activePokemon, value: action.body}\r\n            }\r\n        case ActionsPokemon.GET_POKEMON_LIST_SUCCESS:\r\n            return {...state, loading: false, pokemonList: action.body.results}\r\n        case ActionsPokemon.CHANGE_ACTIVE_POKEMON:\r\n            return {...state, activePokemon: {...state.activePokemon, id: action.id}}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default reducerPokemon;\r\n","import {combineReducers} from \"redux\";\r\n\r\nimport reducerPokemon from \"../Pokemon/Redux/reducerPokemonList\";\r\n\r\nconst rootReducer = combineReducers({\r\n    pokemons: reducerPokemon\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport default rootReducer;\r\n","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport startForkWatchers from \"./saga\";\r\nimport rootReducer from \"./reducer\";\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst composeEnhancers =\r\n    (typeof window !== \"undefined\" &&\r\n        // @ts-ignore\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n        // @ts-ignore\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ trace: true, traceLimit: 25 })) ||\r\n    compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware)),\r\n)\r\n\r\nsagaMiddleware.run(startForkWatchers)\r\n\r\nexport default store;\r\n","import {RootState} from \"../RootRedux/reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeActivePokemon, getPokemon, getPokemonList} from \"./Redux/actionsPokemonList\";\r\nimport {IPokemonState} from \"./Redux/initialStatePokemons\";\r\n\r\ninterface Returned {\r\n    pokemonState: IPokemonState,\r\n    pokemonMethods: {\r\n        get_pokemon: Function,\r\n        get_pokemon_list: Function,\r\n        change_active_pokemon: Function,\r\n        getPokemonIdxFromLink: Function\r\n    }\r\n}\r\n\r\nconst usePokemon = (): Returned => {\r\n    const dispatch = useDispatch();\r\n    const {loading, error, activePokemon, pokemonList} = useSelector((state: RootState) => state.pokemons)\r\n\r\n    const get_pokemon = (id: number) => dispatch(getPokemon(id));\r\n    const get_pokemon_list = (limit: number, offset: number) => dispatch(getPokemonList(limit, offset));\r\n    const change_active_pokemon = (id:number) => dispatch((changeActivePokemon(id)))\r\n\r\n    const getPokemonIdxFromLink = (link: string) => /\\/(\\d+)\\/$/.exec(link)\r\n\r\n    return {\r\n        pokemonState: {\r\n            loading,\r\n            error,\r\n            activePokemon,\r\n            pokemonList,\r\n        },\r\n        pokemonMethods: {\r\n            get_pokemon,\r\n            get_pokemon_list,\r\n            change_active_pokemon,\r\n            getPokemonIdxFromLink\r\n        }\r\n    }\r\n}\r\n\r\nexport default usePokemon;\r\n","import {useEffect} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport usePokemon from \"../../usePokemon.hook\";\r\n\r\ninterface IPokemon {\r\n    name: string,\r\n    id: number\r\n}\r\n\r\ninterface Returned {\r\n    pokemonList: IPokemon[] | null,\r\n    activePokemon: number | null | undefined,\r\n    changeSelectedPokemon: Function,\r\n}\r\n\r\nconst usePokemonList = (): Returned => {\r\n\r\n    const history = useHistory();\r\n\r\n    const {pokemonMethods, pokemonState} = usePokemon()\r\n\r\n    useEffect(() => {\r\n        pokemonMethods.get_pokemon_list(15, 0)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // запрашиваем с бека информацию по активному покемону, если установлен айди активного покемона\r\n        if (pokemonState.activePokemon.id) pokemonMethods.get_pokemon(pokemonState.activePokemon.id)\r\n    }, [pokemonState.activePokemon.id])\r\n\r\n    const pokemonList: IPokemon[] | null = pokemonState.pokemonList && pokemonState.pokemonList.map(pokemon => ({\r\n        name: pokemon.name,\r\n        id: pokemonMethods.getPokemonIdxFromLink(pokemon.url)[1]\r\n    }))\r\n\r\n    const changeSelectedPokemon = (id: number): void => {\r\n        pokemonMethods.change_active_pokemon(id);\r\n        history.push(`/pokemon/${id}`)\r\n    }\r\n\r\n    return {\r\n        pokemonList,\r\n        activePokemon: pokemonState.activePokemon.id,\r\n        changeSelectedPokemon,\r\n    }\r\n}\r\n\r\n\r\nexport default usePokemonList;\r\n","import React, {FC} from \"react\";\r\nimport {List, ListItem, ListItemText} from '@material-ui/core/';\r\nimport usePokemonList from \"./usePokemonList.hook\";\r\nimport \"./pokemonList.scss\"\r\n\r\n\r\nconst PokemonList: FC = () => {\r\n    const {pokemonList, activePokemon, changeSelectedPokemon,} = usePokemonList();\r\n\r\n    const pokemonListElement: JSX.Element | null = pokemonList && (\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n            {pokemonList.map((pokemon) => (\r\n                <ListItem\r\n                    key={pokemon.name}\r\n                    button\r\n                    selected={activePokemon === pokemon.id}\r\n                    onClick={() => changeSelectedPokemon(pokemon.id)}\r\n                >\r\n                    <ListItemText primary={pokemon.name}/>\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    )\r\n\r\n    return (\r\n        <div className=\"PokemonList-wrapper\">\r\n            {pokemonList && (\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                    {pokemonListElement}\r\n                </List>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokemonList;\r\n\r\n","import usePokemon from \"../../usePokemon.hook\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\n\r\ninterface Params {\r\n    id: number | undefined\r\n}\r\n\r\ninterface Returned {\r\n    activePokemon: any\r\n}\r\n\r\nconst usePokemonActive = (): Returned => {\r\n    const {pokemonState, pokemonMethods} = usePokemon()\r\n    const {id} = useParams() as Params;\r\n\r\n    // запрашиваем данные с бека, когда в ссылке появляется айди\r\n    useEffect(() => {\r\n        if (id && pokemonState.activePokemon.id !== id) pokemonMethods.get_pokemon(id)\r\n    }, [pokemonState.activePokemon.id, id])\r\n\r\n    return {\r\n        activePokemon: pokemonState.activePokemon.value\r\n    }\r\n}\r\n\r\nexport default usePokemonActive;\r\n","import React, {FC} from \"react\";\r\nimport {Card, CardContent, Typography,} from '@material-ui/core/';\r\nimport usePokemonActive from \"./usePokemonActive.hook\";\r\nimport \"./pokemonActive.scss\"\r\n\r\n\r\nconst PokemonActive: FC = () => {\r\n\r\n    const {activePokemon} = usePokemonActive()\r\n\r\n    return (\r\n        <Card className=\"PokemonActive-wrapper\" variant=\"outlined\">\r\n            <CardContent>\r\n                <Typography className=\"PokemonActive-title\" color=\"textSecondary\" gutterBottom>\r\n                    Pokemon:\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {activePokemon?.name}\r\n                </Typography>\r\n                <div className=\"PokemonActiveCharacteristics\">\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                        Weight: {activePokemon?.weight}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                        Height: {activePokemon?.height}\r\n                    </Typography>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nexport default PokemonActive;\r\n","import React, {FC} from \"react\";\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport PokemonList from \"../PokemonList/PokemonList\";\r\nimport PokemonActive from \"../PokemonActive/PokemonActive\";\r\nimport \"./pokemonManePage.scss\"\r\n\r\nconst PokemonManePage: FC = () => {\r\n    return (\r\n        <Switch>\r\n            <div className=\"PokemonManePage-wrapper\">\r\n                <Route path=\"/\" component={PokemonList}/>\r\n                <Route path='/pokemon/:id' component={PokemonActive}/>\r\n                {/*<Route path='*' exact render={()=><div>Ой, такой страницы не существует</div>}/>*/}\r\n            </div>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default PokemonManePage\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router} from 'react-router-dom';\nimport {Provider} from \"react-redux\";\nimport store from \"./RootRedux/store\";\nimport PokemonManePage from \"./Pokemon/Components/PokemonManePage/PokemonManePage\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <Provider store={store}>\n                <PokemonManePage/>\n            </Provider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}